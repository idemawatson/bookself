// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets   = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @unique @default(cuid())
  sub        String @unique
  name       String
  email      String @unique
  books      Book[]
  record     UserRecord?
  followedBy Follows[] @relation("following")
  following  Follows[] @relation("follower")
  trophies   Trophy[]
}

model UserRecord {
  id            String    @id @unique @default(cuid())
  user          User      @relation(fields: [user_id], references: [sub])
  user_id       String    @unique
  level         Int       @default(1)
  total_pages   Int       @default(0)
  updated_at    DateTime? @default(now()) @updatedAt
}

model Book {
  id           String    @id @unique @default(cuid())
  book_id      String
  owner        User     @relation(fields: [user_id], references: [sub])
  user_id      String
  title        String
  author       String    @default("")
  image_url    String    @default("")
  comment      String    @default("")
  description  String    @default("")
  rating       Int       @default(0)
  page_count   Int       @default(0)
  published_at DateTime?
  created_at   DateTime? @default(now())
  updated_at   DateTime? @default(now()) @updatedAt
  completed_at DateTime?
  status       Int
  @@unique([user_id, book_id], name: "book_id_on_user")
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  String
  following   User @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Trophy {
  id         String        @id @unique @default(cuid())
  owner      User          @relation(fields: [user_id], references: [sub])
  user_id    String
  trophy_id  String
  created_at DateTime      @default(now())
  @@unique([user_id, trophy_id], name: "trophy_id_on_user")
}